/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __BASHREADLINE_BPF_SKEL_H__
#define __BASHREADLINE_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct bashreadline_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *events;
	} maps;
	struct {
		struct bpf_program *printret;
	} progs;
	struct {
		struct bpf_link *printret;
	} links;

#ifdef __cplusplus
	static inline struct bashreadline_bpf *open(const struct
						    bpf_object_open_opts *opts =
						    nullptr);
	static inline struct bashreadline_bpf *open_and_load();
	static inline int load(struct bashreadline_bpf *skel);
	static inline int attach(struct bashreadline_bpf *skel);
	static inline void detach(struct bashreadline_bpf *skel);
	static inline void destroy(struct bashreadline_bpf *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif				/* __cplusplus */
};

static void bashreadline_bpf__destroy(struct bashreadline_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
bashreadline_bpf__create_skeleton(struct bashreadline_bpf *obj);

static inline struct bashreadline_bpf *bashreadline_bpf__open_opts(const struct
								   bpf_object_open_opts
								   *opts)
{
	struct bashreadline_bpf *obj;
	int err;

	obj = (struct bashreadline_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = bashreadline_bpf__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
 err_out:
	bashreadline_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct bashreadline_bpf *bashreadline_bpf__open(void)
{
	return bashreadline_bpf__open_opts(NULL);
}

static inline int bashreadline_bpf__load(struct bashreadline_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct bashreadline_bpf *bashreadline_bpf__open_and_load(void)
{
	struct bashreadline_bpf *obj;
	int err;

	obj = bashreadline_bpf__open();
	if (!obj)
		return NULL;
	err = bashreadline_bpf__load(obj);
	if (err) {
		bashreadline_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int bashreadline_bpf__attach(struct bashreadline_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void bashreadline_bpf__detach(struct bashreadline_bpf *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *bashreadline_bpf__elf_bytes(size_t *sz);

static inline int
bashreadline_bpf__create_skeleton(struct bashreadline_bpf *obj)
{
	struct bpf_object_skeleton *s;
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s) {
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "bashreadline_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 1;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	s->maps[0].name = "events";
	s->maps[0].map = &obj->maps.events;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs =
	    (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "printret";
	s->progs[0].prog = &obj->progs.printret;
	s->progs[0].link = &obj->links.printret;

	s->data = bashreadline_bpf__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
 err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *bashreadline_bpf__elf_bytes(size_t *sz)
{
	static const char data[] __attribute__((__aligned__(8))) = "\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xe8\x17\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1b\0\
\x01\0\xbf\x16\0\0\0\0\0\0\x79\x67\x50\0\0\0\0\0\x15\x07\x15\0\0\0\0\0\xbf\xa1\
\0\0\0\0\0\0\x07\x01\0\0\x98\xff\xff\xff\xb7\x02\0\0\x10\0\0\0\x85\0\0\0\x10\0\
\0\0\x85\0\0\0\x0e\0\0\0\x77\0\0\0\x20\0\0\0\x63\x0a\xa8\xff\0\0\0\0\xbf\xa1\0\
\0\0\0\0\0\x07\x01\0\0\xac\xff\xff\xff\xb7\x02\0\0\x50\0\0\0\xbf\x73\0\0\0\0\0\
\0\x85\0\0\0\x70\0\0\0\xbf\xa4\0\0\0\0\0\0\x07\x04\0\0\xa8\xff\xff\xff\xbf\x61\
\0\0\0\0\0\0\x18\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x03\0\0\xff\xff\xff\xff\0\
\0\0\0\0\0\0\0\xb7\x05\0\0\x54\0\0\0\x85\0\0\0\x19\0\0\0\xb7\0\0\0\0\0\0\0\x95\
\0\0\0\0\0\0\0\x44\x75\x61\x6c\x20\x42\x53\x44\x2f\x47\x50\x4c\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\x05\0\x08\0\x01\0\0\0\x04\0\
\0\0\x04\0\x08\x01\x51\x04\x08\xd0\x01\x01\x56\0\x01\x11\x01\x25\x25\x13\x05\
\x03\x25\x72\x17\x10\x17\x1b\x25\x11\x1b\x12\x06\x73\x17\x8c\x01\x17\0\0\x02\
\x34\0\x03\x25\x49\x13\x3f\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\x03\x01\x01\x49\x13\
\0\0\x04\x21\0\x49\x13\x37\x0b\0\0\x05\x24\0\x03\x25\x3e\x0b\x0b\x0b\0\0\x06\
\x24\0\x03\x25\x0b\x0b\x3e\x0b\0\0\x07\x13\x01\x0b\x0b\x3a\x0b\x3b\x0b\0\0\x08\
\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x38\x0b\0\0\x09\x0f\0\x49\x13\0\0\x0a\
\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x05\0\0\x0b\x26\0\x49\x13\0\0\x0c\x15\x01\
\x49\x13\x27\x19\0\0\x0d\x05\0\x49\x13\0\0\x0e\x0f\0\0\0\x0f\x16\0\x49\x13\x03\
\x25\x3a\x0b\x3b\x0b\0\0\x10\x15\0\x49\x13\x27\x19\0\0\x11\x26\0\0\0\x12\x04\
\x01\x49\x13\x0b\x0b\x3a\x0b\x3b\x05\0\0\x13\x28\0\x03\x25\x1c\x0f\0\0\x14\x2e\
\x01\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x20\x21\x01\0\0\x15\x05\0\x03\x25\
\x3a\x0b\x3b\x0b\x49\x13\0\0\x16\x34\0\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x17\
\x13\x01\x03\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\x18\x0d\0\x03\x25\x49\x13\x3a\x0b\
\x3b\x05\x38\x0b\0\0\x19\x13\x01\x03\x25\x0b\x0b\x3a\x0b\x3b\x0b\0\0\x1a\x2e\
\x01\x11\x1b\x12\x06\x40\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\
\x3f\x19\0\0\x1b\x05\0\x02\x22\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x1c\x1d\x01\
\x31\x13\x11\x1b\x12\x06\x58\x0b\x59\x0b\x57\x0b\0\0\x1d\x05\0\x02\x18\x31\x13\
\0\0\x1e\x34\0\x02\x18\x31\x13\0\0\0\xe5\x02\0\0\x05\0\x01\x08\0\0\0\0\x01\0\
\x0c\0\x01\x08\0\0\0\0\0\0\0\x02\x02\xd0\0\0\0\x08\0\0\0\x0c\0\0\0\x02\x03\x32\
\0\0\0\0\x26\x02\xa1\0\x03\x3e\0\0\0\x04\x42\0\0\0\x0d\0\x05\x04\x06\x01\x06\
\x05\x08\x07\x02\x06\x51\0\0\0\0\x10\x02\xa1\x01\x07\x18\0\x0b\x08\x07\x71\0\0\
\0\0\x0c\0\x08\x09\x71\0\0\0\0\x0d\x08\x08\x0a\x71\0\0\0\0\x0e\x10\0\x09\x76\0\
\0\0\x03\x82\0\0\0\x04\x42\0\0\0\x04\0\x05\x08\x05\x04\x0a\x0b\x8f\0\0\0\x02\
\x8c\x01\x0b\x94\0\0\0\x09\x99\0\0\0\x0c\xa9\0\0\0\x0d\xad\0\0\0\x0d\xae\0\0\0\
\0\x05\x0c\x05\x08\x0e\x0f\xb6\0\0\0\x0e\x01\x0e\x05\x0d\x07\x04\x0a\x0f\xc3\0\
\0\0\x02\x72\x01\x0b\xc8\0\0\0\x09\xcd\0\0\0\x10\xd2\0\0\0\x0f\xda\0\0\0\x11\
\x01\x12\x05\x10\x07\x08\x0a\x12\xe7\0\0\0\x02\xec\x0a\x0b\xec\0\0\0\x09\xf1\0\
\0\0\x0c\xa9\0\0\0\x0d\xad\0\0\0\x0d\xae\0\0\0\x0d\x06\x01\0\0\0\x09\x0b\x01\0\
\0\x11\x0a\x13\x15\x01\0\0\x02\xba\x02\x0b\x1a\x01\0\0\x09\x1f\x01\0\0\x0c\xa9\
\0\0\0\x0d\xad\0\0\0\x0d\xad\0\0\0\x0d\xd2\0\0\0\x0d\xad\0\0\0\x0d\xd2\0\0\0\0\
\x12\x60\x01\0\0\x08\x01\xc8\x75\x13\x15\xff\xff\xff\xff\x0f\x13\x16\xff\xff\
\xff\xff\x0f\x13\x17\x80\x80\x80\x80\xf0\xff\xff\x07\0\x05\x14\x07\x08\x14\x18\
\0\x13\x82\0\0\0\x15\x19\0\x13\x95\x01\0\0\x15\x30\0\x13\x06\x01\0\0\x16\x31\0\
\x15\x73\x02\0\0\x16\x35\0\x16\x97\x02\0\0\x16\x32\0\x17\xa3\x02\0\0\0\x09\x9a\
\x01\0\0\x17\x2f\xa8\x01\x3a\x04\x18\x1a\x60\x01\0\0\x01\x3b\x04\0\x18\x1b\x60\
\x01\0\0\x01\x3c\x04\x08\x18\x1c\x60\x01\0\0\x01\x3d\x04\x10\x18\x1d\x60\x01\0\
\0\x01\x3e\x04\x18\x18\x1e\x60\x01\0\0\x01\x3f\x04\x20\x18\x1f\x60\x01\0\0\x01\
\x40\x04\x28\x18\x20\x60\x01\0\0\x01\x41\x04\x30\x18\x21\x60\x01\0\0\x01\x42\
\x04\x38\x18\x22\x60\x01\0\0\x01\x43\x04\x40\x18\x23\x60\x01\0\0\x01\x44\x04\
\x48\x18\x24\x60\x01\0\0\x01\x45\x04\x50\x18\x25\x60\x01\0\0\x01\x46\x04\x58\
\x18\x26\x60\x01\0\0\x01\x47\x04\x60\x18\x27\x60\x01\0\0\x01\x48\x04\x68\x18\
\x28\x60\x01\0\0\x01\x49\x04\x70\x18\x29\x60\x01\0\0\x01\x4a\x04\x78\x18\x2a\
\x60\x01\0\0\x01\x4b\x04\x80\x18\x2b\x60\x01\0\0\x01\x4c\x04\x88\x18\x2c\x60\
\x01\0\0\x01\x4d\x04\x90\x18\x2d\x60\x01\0\0\x01\x4e\x04\x98\x18\x2e\x60\x01\0\
\0\x01\x4f\x04\xa0\0\x19\x34\x54\x03\x09\x08\x32\xae\0\0\0\x03\x0a\0\x08\x33\
\x8b\x02\0\0\x03\x0b\x04\0\x03\x3e\0\0\0\x04\x42\0\0\0\x50\0\x03\x3e\0\0\0\x04\
\x42\0\0\0\x10\0\x0f\xae\0\0\0\x36\x01\x1a\x1a\x02\xd0\0\0\0\x01\x5a\x37\0\x13\
\x82\0\0\0\x1b\0\x19\0\x13\x95\x01\0\0\x1c\x64\x01\0\0\x03\xb0\0\0\0\0\x13\x05\
\x1d\x01\x56\x6c\x01\0\0\x1d\x01\x57\x74\x01\0\0\x1e\x02\x91\x10\x7c\x01\0\0\0\
\0\0\xe4\0\0\0\x05\0\0\0\0\0\0\0\x27\0\0\0\x3a\0\0\0\x51\0\0\0\x59\0\0\0\x5e\0\
\0\0\x72\0\0\0\x79\0\0\0\x7e\0\0\0\x82\0\0\0\x8b\0\0\0\x96\0\0\0\xab\0\0\0\xb0\
\0\0\0\xbd\0\0\0\xc3\0\0\0\xdc\0\0\0\xef\0\0\0\xf5\0\0\0\x09\x01\0\0\x1f\x01\0\
\0\x2d\x01\0\0\x3e\x01\0\0\x50\x01\0\0\x62\x01\0\0\x6f\x01\0\0\x73\x01\0\0\x77\
\x01\0\0\x7b\x01\0\0\x7f\x01\0\0\x83\x01\0\0\x86\x01\0\0\x89\x01\0\0\x8d\x01\0\
\0\x91\x01\0\0\x94\x01\0\0\x97\x01\0\0\x9a\x01\0\0\x9d\x01\0\0\xa0\x01\0\0\xa3\
\x01\0\0\xa6\x01\0\0\xae\x01\0\0\xb1\x01\0\0\xb4\x01\0\0\xba\x01\0\0\xbd\x01\0\
\0\xc0\x01\0\0\xc8\x01\0\0\xcc\x01\0\0\xd1\x01\0\0\xd5\x01\0\0\xd9\x01\0\0\xdf\
\x01\0\0\xe4\x01\0\0\xe8\x01\0\0\x55\x62\x75\x6e\x74\x75\x20\x63\x6c\x61\x6e\
\x67\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x31\x34\x2e\x30\x2e\x30\x2d\x31\x75\
\x62\x75\x6e\x74\x75\x31\x2e\x31\0\x62\x61\x73\x68\x72\x65\x61\x64\x6c\x69\x6e\
\x65\x2e\x62\x70\x66\x2e\x63\0\x2f\x67\x6f\x2f\x65\x62\x70\x66\x2d\x61\x70\x70\
\x73\x2f\x62\x70\x66\x2d\x61\x70\x70\x73\0\x4c\x49\x43\x45\x4e\x53\x45\0\x63\
\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\
\x45\x5f\x5f\0\x65\x76\x65\x6e\x74\x73\0\x74\x79\x70\x65\0\x69\x6e\x74\0\x6b\
\x65\x79\x5f\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\x62\
\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x63\x6f\x6d\x6d\0\
\x6c\x6f\x6e\x67\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\
\x75\x33\x32\0\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\
\x70\x69\x64\x5f\x74\x67\x69\x64\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\
\x6e\x67\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x75\x36\x34\0\x62\x70\x66\x5f\x70\x72\
\x6f\x62\x65\x5f\x72\x65\x61\x64\x5f\x75\x73\x65\x72\0\x62\x70\x66\x5f\x70\x65\
\x72\x66\x5f\x65\x76\x65\x6e\x74\x5f\x6f\x75\x74\x70\x75\x74\0\x75\x6e\x73\x69\
\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\0\x42\x50\x46\x5f\x46\x5f\x49\x4e\x44\x45\
\x58\x5f\x4d\x41\x53\x4b\0\x42\x50\x46\x5f\x46\x5f\x43\x55\x52\x52\x45\x4e\x54\
\x5f\x43\x50\x55\0\x42\x50\x46\x5f\x46\x5f\x43\x54\x58\x4c\x45\x4e\x5f\x4d\x41\
\x53\x4b\0\x5f\x5f\x5f\x5f\x70\x72\x69\x6e\x74\x72\x65\x74\0\x63\x74\x78\0\x72\
\x31\x35\0\x72\x31\x34\0\x72\x31\x33\0\x72\x31\x32\0\x62\x70\0\x62\x78\0\x72\
\x31\x31\0\x72\x31\x30\0\x72\x39\0\x72\x38\0\x61\x78\0\x63\x78\0\x64\x78\0\x73\
\x69\0\x64\x69\0\x6f\x72\x69\x67\x5f\x61\x78\0\x69\x70\0\x63\x73\0\x66\x6c\x61\
\x67\x73\0\x73\x70\0\x73\x73\0\x70\x74\x5f\x72\x65\x67\x73\0\x72\x65\x74\0\x64\
\x61\x74\x61\0\x70\x69\x64\0\x73\x74\x72\0\x73\x74\x72\x5f\x74\0\x63\x6f\x6d\
\x6d\0\x75\x33\x32\0\x70\x72\x69\x6e\x74\x72\x65\x74\0\x24\0\0\0\x05\0\x08\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\0\x9f\xeb\x01\
\0\x18\0\0\0\0\0\0\0\x30\x02\0\0\x30\x02\0\0\x1b\x02\0\0\0\0\0\0\0\0\0\x02\x03\
\0\0\0\x01\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x02\
\0\0\0\x04\0\0\0\x04\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\x03\
\0\0\x04\x18\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\x01\0\0\0\x40\0\0\0\
\x27\0\0\0\x01\0\0\0\x80\0\0\0\x32\0\0\0\0\0\0\x0e\x05\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\x02\x08\0\0\0\x39\0\0\0\x15\0\0\x04\xa8\0\0\0\x41\0\0\0\x09\0\0\0\0\0\0\
\0\x45\0\0\0\x09\0\0\0\x40\0\0\0\x49\0\0\0\x09\0\0\0\x80\0\0\0\x4d\0\0\0\x09\0\
\0\0\xc0\0\0\0\x51\0\0\0\x09\0\0\0\0\x01\0\0\x54\0\0\0\x09\0\0\0\x40\x01\0\0\
\x57\0\0\0\x09\0\0\0\x80\x01\0\0\x5b\0\0\0\x09\0\0\0\xc0\x01\0\0\x5f\0\0\0\x09\
\0\0\0\0\x02\0\0\x62\0\0\0\x09\0\0\0\x40\x02\0\0\x65\0\0\0\x09\0\0\0\x80\x02\0\
\0\x68\0\0\0\x09\0\0\0\xc0\x02\0\0\x6b\0\0\0\x09\0\0\0\0\x03\0\0\x6e\0\0\0\x09\
\0\0\0\x40\x03\0\0\x71\0\0\0\x09\0\0\0\x80\x03\0\0\x74\0\0\0\x09\0\0\0\xc0\x03\
\0\0\x7c\0\0\0\x09\0\0\0\0\x04\0\0\x7f\0\0\0\x09\0\0\0\x40\x04\0\0\x82\0\0\0\
\x09\0\0\0\x80\x04\0\0\x88\0\0\0\x09\0\0\0\xc0\x04\0\0\x8b\0\0\0\x09\0\0\0\0\
\x05\0\0\x8e\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\
\x9c\0\0\0\x07\0\0\0\xa0\0\0\0\x01\0\0\x0c\x0a\0\0\0\0\x02\0\0\0\0\0\x01\x01\0\
\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x0c\0\0\0\x04\0\0\0\x0d\0\0\0\x05\
\x02\0\0\0\0\0\x0e\x0d\0\0\0\x01\0\0\0\x0d\x02\0\0\x01\0\0\x0f\0\0\0\0\x06\0\0\
\0\0\0\0\0\x18\0\0\0\x13\x02\0\0\x01\0\0\x0f\0\0\0\0\x0e\0\0\0\0\0\0\0\x0d\0\0\
\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\
\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\x6b\x65\x79\x5f\x73\x69\x7a\x65\0\x76\x61\
\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\x65\x76\x65\x6e\x74\x73\0\x70\x74\x5f\x72\
\x65\x67\x73\0\x72\x31\x35\0\x72\x31\x34\0\x72\x31\x33\0\x72\x31\x32\0\x62\x70\
\0\x62\x78\0\x72\x31\x31\0\x72\x31\x30\0\x72\x39\0\x72\x38\0\x61\x78\0\x63\x78\
\0\x64\x78\0\x73\x69\0\x64\x69\0\x6f\x72\x69\x67\x5f\x61\x78\0\x69\x70\0\x63\
\x73\0\x66\x6c\x61\x67\x73\0\x73\x70\0\x73\x73\0\x75\x6e\x73\x69\x67\x6e\x65\
\x64\x20\x6c\x6f\x6e\x67\0\x63\x74\x78\0\x70\x72\x69\x6e\x74\x72\x65\x74\0\x75\
\x72\x65\x74\x70\x72\x6f\x62\x65\x2f\x72\x65\x61\x64\x6c\x69\x6e\x65\0\x2f\x67\
\x6f\x2f\x65\x62\x70\x66\x2d\x61\x70\x70\x73\x2f\x62\x70\x66\x2d\x61\x70\x70\
\x73\x2f\x62\x61\x73\x68\x72\x65\x61\x64\x6c\x69\x6e\x65\x2e\x62\x70\x66\x2e\
\x63\0\x69\x6e\x74\x20\x42\x50\x46\x5f\x4b\x52\x45\x54\x50\x52\x4f\x42\x45\x28\
\x70\x72\x69\x6e\x74\x72\x65\x74\x2c\x20\x63\x6f\x6e\x73\x74\x20\x76\x6f\x69\
\x64\x20\x2a\x72\x65\x74\x29\0\x30\x3a\x31\x30\0\x09\x69\x66\x20\x28\x21\x72\
\x65\x74\x29\0\x09\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\
\x5f\x63\x6f\x6d\x6d\x28\x26\x63\x6f\x6d\x6d\x2c\x20\x73\x69\x7a\x65\x6f\x66\
\x28\x63\x6f\x6d\x6d\x29\x29\x3b\0\x09\x70\x69\x64\x20\x3d\x20\x62\x70\x66\x5f\
\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\x69\x64\x5f\x74\x67\x69\
\x64\x28\x29\x20\x3e\x3e\x20\x33\x32\x3b\0\x09\x64\x61\x74\x61\x2e\x70\x69\x64\
\x20\x3d\x20\x70\x69\x64\x3b\0\x09\x62\x70\x66\x5f\x70\x72\x6f\x62\x65\x5f\x72\
\x65\x61\x64\x5f\x75\x73\x65\x72\x28\x26\x64\x61\x74\x61\x2e\x73\x74\x72\x2c\
\x20\x73\x69\x7a\x65\x6f\x66\x28\x64\x61\x74\x61\x2e\x73\x74\x72\x29\x2c\x20\
\x72\x65\x74\x29\x3b\0\x09\x62\x70\x66\x5f\x70\x65\x72\x66\x5f\x65\x76\x65\x6e\
\x74\x5f\x6f\x75\x74\x70\x75\x74\x28\x63\x74\x78\x2c\x20\x26\x65\x76\x65\x6e\
\x74\x73\x2c\x20\x42\x50\x46\x5f\x46\x5f\x43\x55\x52\x52\x45\x4e\x54\x5f\x43\
\x50\x55\x2c\x20\x26\x64\x61\x74\x61\x2c\0\x63\x68\x61\x72\0\x4c\x49\x43\x45\
\x4e\x53\x45\0\x2e\x6d\x61\x70\x73\0\x6c\x69\x63\x65\x6e\x73\x65\0\0\x9f\xeb\
\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\xcc\0\0\0\xe0\0\0\0\x1c\0\0\0\x08\
\0\0\0\xa9\0\0\0\x01\0\0\0\0\0\0\0\x0b\0\0\0\x10\0\0\0\xa9\0\0\0\x0c\0\0\0\0\0\
\0\0\xbc\0\0\0\xe6\0\0\0\0\x4c\0\0\x08\0\0\0\xbc\0\0\0\xe6\0\0\0\x05\x4c\0\0\
\x10\0\0\0\xbc\0\0\0\x18\x01\0\0\x06\x64\0\0\x20\0\0\0\xbc\0\0\0\x23\x01\0\0\
\x02\x70\0\0\x38\0\0\0\xbc\0\0\0\x4f\x01\0\0\x08\x74\0\0\x40\0\0\0\xbc\0\0\0\
\x4f\x01\0\0\x23\x74\0\0\x48\0\0\0\xbc\0\0\0\x78\x01\0\0\x0b\x78\0\0\x50\0\0\0\
\xbc\0\0\0\x89\x01\0\0\x16\x7c\0\0\x60\0\0\0\xbc\0\0\0\x89\x01\0\0\x02\x7c\0\0\
\x80\0\0\0\xbc\0\0\0\x23\x01\0\0\x02\x70\0\0\x88\0\0\0\xbc\0\0\0\xc1\x01\0\0\
\x02\x84\0\0\xc0\0\0\0\xbc\0\0\0\xe6\0\0\0\x05\x4c\0\0\x10\0\0\0\xa9\0\0\0\x01\
\0\0\0\x08\0\0\0\x08\0\0\0\x13\x01\0\0\0\0\0\0\0\0\0\0\x0c\0\0\0\xff\xff\xff\
\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd0\0\0\0\0\0\
\0\0\xcb\0\0\0\x05\0\x08\0\x7e\0\0\0\x08\x01\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\
\0\0\0\x01\0\0\x01\x01\x01\x1f\x03\0\0\0\0\x17\0\0\0\x19\0\0\0\x03\x01\x1f\x02\
\x0f\x05\x1e\x04\x30\0\0\0\0\x05\x2f\xd9\xaf\xb5\x95\xce\xdd\x7d\x79\x3f\xa1\
\x97\x99\xa3\xf2\x43\0\0\0\x01\x2f\x85\xf9\x98\x02\xa5\xf4\x44\xa8\x02\xdd\x45\
\xb0\x0d\x10\x14\x4d\0\0\0\x02\x65\xe4\xdc\x8e\x31\x21\xf9\x1a\x5c\x2c\x9e\xb8\
\x56\x3c\x56\x92\x5f\0\0\0\x01\x92\x38\x81\x33\x04\x5e\xec\x4f\xd8\xb3\x6d\xb1\
\xf8\x1d\x81\x52\x04\0\0\x09\x02\0\0\0\0\0\0\0\0\x03\x12\x01\x05\x05\x0a\x20\
\x05\x06\x26\x06\x03\x67\x20\x05\x02\x06\x03\x1c\x20\x05\x08\x3d\x05\x23\x06\
\x20\x05\x0b\x06\x21\x05\x16\x21\x05\x02\x06\x2e\x03\x61\x3c\x06\x03\x1c\x20\
\x25\x05\x05\x03\x72\x74\x02\x02\0\x01\x01\x2f\x67\x6f\x2f\x65\x62\x70\x66\x2d\
\x61\x70\x70\x73\x2f\x62\x70\x66\x2d\x61\x70\x70\x73\0\x2e\0\x6c\x69\x62\x62\
\x70\x66\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\x75\x64\x65\x2f\x62\x70\x66\0\x62\
\x61\x73\x68\x72\x65\x61\x64\x6c\x69\x6e\x65\x2e\x62\x70\x66\x2e\x63\0\x76\x6d\
\x6c\x69\x6e\x75\x78\x2e\x68\0\x62\x70\x66\x5f\x68\x65\x6c\x70\x65\x72\x5f\x64\
\x65\x66\x73\x2e\x68\0\x62\x61\x73\x68\x72\x65\x61\x64\x6c\x69\x6e\x65\x2e\x68\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\0\0\0\x04\0\xf1\
\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x1c\x01\0\0\0\0\x03\0\xc0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x08\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0e\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x18\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x22\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\xd0\0\0\0\0\0\0\0\x3b\0\0\
\0\x11\0\x06\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x14\x01\0\0\x11\0\x05\0\0\0\0\
\0\0\0\0\0\x0d\0\0\0\0\0\0\0\x90\0\0\0\0\0\0\0\x01\0\0\0\x0d\0\0\0\x08\0\0\0\0\
\0\0\0\x03\0\0\0\x05\0\0\0\x11\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x15\0\0\0\0\0\
\0\0\x03\0\0\0\x0a\0\0\0\x1f\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x23\0\0\0\0\0\0\
\0\x03\0\0\0\x04\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x0c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x10\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x14\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x18\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x1c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x20\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x24\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x28\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x2c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x30\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x34\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x38\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x3c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x44\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x48\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x4c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x50\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x54\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x58\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x5c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x64\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x68\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x6c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x70\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x74\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x78\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x7c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x80\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x84\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x88\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x8c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x90\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x94\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x98\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x9c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xa0\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xa4\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xa8\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xac\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xb0\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xb4\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xb8\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xbc\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xc0\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xc4\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xc8\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xcc\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xd0\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xd4\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xd8\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xdc\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xe0\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xe4\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x08\0\0\0\0\0\0\0\x02\0\0\0\x0e\0\0\0\x10\0\0\0\0\0\0\0\
\x02\0\0\0\x0d\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x20\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x28\x02\0\0\0\0\0\0\x04\0\0\0\x0d\0\0\0\x40\x02\0\0\0\0\0\
\0\x04\0\0\0\x0e\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x40\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x60\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x70\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x90\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xa0\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xb0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xc0\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xd0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xe0\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xf0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x0c\x01\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\x18\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x22\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x26\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x2a\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x36\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x4b\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x60\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x75\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x8f\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x0c\x0e\x0d\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\
\x65\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\
\x74\0\x70\x72\x69\x6e\x74\x72\x65\x74\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x6f\
\x63\x6c\x69\x73\x74\x73\0\x65\x76\x65\x6e\x74\x73\0\x2e\x72\x65\x6c\x2e\x64\
\x65\x62\x75\x67\x5f\x73\x74\x72\x5f\x6f\x66\x66\x73\x65\x74\x73\0\x2e\x6d\x61\
\x70\x73\0\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x64\x65\x62\x75\x67\
\x5f\x6c\x69\x6e\x65\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\
\x5f\x61\x64\x64\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x69\x6e\x66\
\x6f\0\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x6c\x69\x63\x65\
\x6e\x73\x65\0\x2e\x72\x65\x6c\x75\x72\x65\x74\x70\x72\x6f\x62\x65\x2f\x72\x65\
\x61\x64\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\
\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\x72\x61\x6d\x65\0\
\x62\x61\x73\x68\x72\x65\x61\x64\x6c\x69\x6e\x65\x2e\x62\x70\x66\x2e\x63\0\x2e\
\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\
\x42\x54\x46\0\x4c\x49\x43\x45\x4e\x53\x45\0\x4c\x42\x42\x30\x5f\x32\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xfb\0\0\0\x03\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xc3\x16\0\0\0\0\0\0\x23\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xb4\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\
\0\0\0\0\0\xd0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xb0\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\x1a\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xa8\0\0\0\
\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x01\0\0\0\0\0\0\x0d\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x59\0\0\0\x01\0\0\0\x03\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\x01\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2b\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x38\x01\0\0\0\0\0\0\x1c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x54\x01\0\0\0\0\0\0\x6d\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x8e\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc1\x02\0\0\0\
\0\0\0\xe9\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x8a\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x11\0\0\0\0\0\0\x50\
\0\0\0\0\0\0\0\x1a\0\0\0\x09\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x46\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xaa\x05\0\0\0\0\0\0\xe8\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x42\0\0\0\x09\0\0\0\x40\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x60\x11\0\0\0\0\0\0\x80\x03\0\0\0\0\0\0\x1a\0\0\
\0\x0b\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x5f\0\0\0\x01\0\0\0\x30\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x92\x06\0\0\0\0\0\0\xf1\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x7e\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x83\x08\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x7a\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xe0\x14\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x1a\0\0\0\x0e\0\0\0\x08\0\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\x0f\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xac\
\x08\0\0\0\0\0\0\x63\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x0b\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\x15\0\0\0\
\0\0\0\x20\0\0\0\0\0\0\0\x1a\0\0\0\x10\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\
\0\x19\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x0d\0\0\0\0\0\0\x1c\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\0\
\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\x15\0\0\0\0\0\0\xe0\0\0\0\0\0\
\0\0\x1a\0\0\0\x12\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xdb\0\0\0\x01\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x0e\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd7\0\0\0\x09\0\0\0\x40\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x20\x16\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x1a\0\0\0\x14\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xcb\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x58\x0e\0\0\0\0\0\0\xcf\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xc7\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\
\x16\0\0\0\0\0\0\x80\0\0\0\0\0\0\0\x1a\0\0\0\x16\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\x6a\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x27\x0f\0\0\
\0\0\0\0\x6e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\x9a\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\xc0\x16\0\0\0\0\0\
\0\x03\0\0\0\0\0\0\0\x1a\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\x01\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x0f\0\0\0\0\0\0\x68\x01\
\0\0\0\0\0\0\x01\0\0\0\x0c\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";

	*sz = sizeof(data) - 1;
	return (const void *)data;
}

#ifdef __cplusplus
struct bashreadline_bpf *bashreadline_bpf::
open(const struct bpf_object_open_opts *opts)
{
	return bashreadline_bpf__open_opts(opts);
}

struct bashreadline_bpf *bashreadline_bpf::open_and_load()
{
	return bashreadline_bpf__open_and_load();
}

int bashreadline_bpf::load(struct bashreadline_bpf *skel)
{
	return bashreadline_bpf__load(skel);
}

int bashreadline_bpf::attach(struct bashreadline_bpf *skel)
{
	return bashreadline_bpf__attach(skel);
}

void bashreadline_bpf::detach(struct bashreadline_bpf *skel)
{
	bashreadline_bpf__detach(skel);
}

void bashreadline_bpf::destroy(struct bashreadline_bpf *skel)
{
	bashreadline_bpf__destroy(skel);
}

const void *bashreadline_bpf::elf_bytes(size_t *sz)
{
	return bashreadline_bpf__elf_bytes(sz);
}
#endif				/* __cplusplus */

__attribute__((unused))
static void
bashreadline_bpf__assert(struct bashreadline_bpf *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif				/* __BASHREADLINE_BPF_SKEL_H__ */
